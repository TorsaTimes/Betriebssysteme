package ctr;

import java.util.LinkedList;

class Speicher extends LinkedList<String> { 
	
	LinkedList<String> liste = new LinkedList<String>();
	
	
	void writeLine(String zeile) {
		try {
			Thread.sleep((int)(Math.random()*2000));
		}
		catch(InterruptedException e) {
			System.out.println(e);
		}
	
		liste.add(zeile);
		System.out.println(liste);
	} 
	
// in writeLine soll der Thread eine zufällige Zeit 
// zwischen 0 und 2 Sekunden schlafen. 
	String readLine(int zeilenNummer) {
		

		try {
			Thread.sleep((int)(Math.random()*2000));
		}
		catch(InterruptedException e) {
			System.out.println(e);
		}

		return this.get(zeilenNummer);
	}
	
// in readLine soll der Thread eine zufällige Zeit // zwischen 0 und 2 Sekunden schlafen. 
	synchronized void schreiberRein() {
		
	}
	
// soll die Zahl schreibender Threads in Speicher um // eins erhöhen, und die neue Zahl auf Bildschirm 
// ausgeben. Soll immer aufgerufen werden, wenn ein // Thread die Methode writeLine betritt. 
	synchronized void schreiberRaus() {
		
	}
	
// soll die Zahl schreibender Thread in Speicher um // eins erniedrigen, und die neue Zahl auf Bildschirm 
// ausgeben. Soll immer aufgerufen werden, wenn ein // Thread die Methode writeLine verläßt 
	synchronized void leserRein() {
		
	}
	
// analog zu schreiberRein 
	
	synchronized void leserRaus() {
		
	}
	
// analog zu schreiberRaus 
	
}